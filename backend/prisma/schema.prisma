// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  //provider = "postgresql"
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String       @id @default(uuid())
  firstName      String       @db.VarChar(100)
  lastName       String       @db.VarChar(100)
  email          String       @unique
  isAdmin        Boolean      @default(false)

  cars      Car[]

  @@unique([firstName, lastName])
  @@map("user")
}

model Car{
  id             String       @id @default(uuid())
  brand          String       @db.VarChar(45)
  model          String       @db.VarChar(45)
  year           Int          @db.Int
  plate          String       @db.VarChar(10)
  cc             Int?         @db.Int
  color          String?      @db.VarChar(45)
  image          String?      @db.VarChar(255)
  purchaseDate   DateTime?    @db.Date() @map("purchase_date")
  purchasePrice  Decimal?     @db.Decimal(9,2) @map("purchase_price")
  saleDate       DateTime?    @db.Date() @map("sale_date")
  salePrice      Decimal?     @db.Decimal(9,2) @map("sale_price")
  createdAt      DateTime     @default(now()) @map("created_at")
  updatedAt      DateTime     @updatedAt   @map("updated_at")
  user           User         @relation(fields: [userId], references:[id])
  userId         String       @map("user_id")

  maintenances   Maintenance[]

  @@unique([userId,plate])
  @@map("car")
}

model Maintenance{
  id             String       @id @default(uuid())
  car            Car          @relation(fields: [carId], references:[id])
  carId          String       @map("car_id")
  title          String       @db.VarChar(255)
  date           DateTime     @db.Date()
  totalPrice     Decimal?     @db.Decimal(9,2) @map("total_price")
  mileage        Int
  notes          String?      @db.VarChar(255)
  createdAt      DateTime     @default(now()) @map("created_at")
  updatedAt      DateTime     @updatedAt   @map("updated_at")

  maintenanceServices MaintenanceService[]

  @@map("maintenance")
}

model MaintenanceService{
  id             String       @id @default(uuid())
  price          Decimal?     @db.Decimal(9,2)
  notes          String?      @db.VarChar(255)
  maintenance    Maintenance  @relation(fields:[maintenanceId], references:[id])
  service        Service      @relation(fields:[serviceId], references:[id])
  maintenanceId  String       @map("maintenance_id")
  serviceId      String       @map("service_id")
  createdAt      DateTime     @default(now()) @map("created_at")
  updatedAt      DateTime     @updatedAt   @map("updated_at")

  @@map("maintenance_service")
}

model Service{
  id             String       @id @default(uuid())
  title          String       @db.VarChar(255)
  description    String?      @db.VarChar(255)
  createdAt      DateTime     @default(now()) @map("created_at")
  updatedAt      DateTime     @updatedAt   @map("updated_at")

  maintenanceServices MaintenanceService[]

  @@map("service")
}